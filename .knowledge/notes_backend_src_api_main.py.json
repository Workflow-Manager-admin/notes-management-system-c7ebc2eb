{"is_source_file": true, "format": "Python", "description": "Main FastAPI application source file for the notes management system. Defines API endpoints for user registration, authentication, and CRUD operations on notes, along with database setup and security features.", "external_files": [".env", "sqlalchemy", "passlib", "fastapi", "jose", "pydantic", "dotenv"], "external_methods": ["fastapi.FastAPI", "fastapi.HTTPException", "fastapi.Depends", "fastapi.status", "fastapi.Request", "fastapi.security.OAuth2PasswordBearer", "fastapi.security.OAuth2PasswordRequestForm", "fastapi.middleware.CORS", "fastapi.responses.JSONResponse", "fastapi.openapi.utils.get_openapi", "jose.jwt", "passlib.context.CryptContext", "pydantic.BaseModel", "datetime.datetime", "datetime.timedelta", "sqlalchemy.create_engine", "sqlalchemy.ext.declarative.declarative_base", "sqlalchemy.orm.sessionmaker", "sqlalchemy.orm.relationship", "sqlalchemy.orm.Session"], "published": ["app", "health_check", "register", "login_for_access_token", "create_note", "list_notes", "get_note", "update_note", "delete_note"], "classes": [{"name": "User", "description": "SQLAlchemy model representing users, with username and hashed password fields, associated with notes."}, {"name": "Note", "description": "SQLAlchemy model representing notes, including title, content, timestamps, and ownership relation."}, {"name": "UserCreate", "description": "Pydantic schema for user registration input."}, {"name": "UserOut", "description": "Pydantic schema for user output, masking internal fields."}, {"name": "Token", "description": "Pydantic schema for JWT token response."}, {"name": "NoteCreate", "description": "Pydantic schema for creating a new note."}, {"name": "NoteEdit", "description": "Pydantic schema for editing an existing note (inherits from NoteCreate)."}, {"name": "NoteOut", "description": "Pydantic schema for note output with timestamps."}], "methods": [{"name": "get_db()", "description": "Provides a database session for dependency injection.", "scope": "", "scopeKind": ""}, {"name": "verify_password(plain_password, hashed_password)", "description": "Verifies a password against a hashed password.", "scope": "", "scopeKind": ""}, {"name": "get_password_hash(password)", "description": "Generates a hash from a plain password.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: Optional[timedelta] = None)", "description": "Creates a JWT token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "get_user(db: Session, username: str)", "description": "Fetches a user by username.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, username: str, password: str)", "description": "Verifies user credentials and returns user if valid.", "scope": "", "scopeKind": ""}, {"name": "get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieves the current authenticated user from token.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint to verify server responsiveness.", "scope": "", "scopeKind": ""}, {"name": "register(user_in: UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user, storing username and hashed password.", "scope": "", "scopeKind": ""}, {"name": "login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Generates JWT token for authenticated user.", "scope": "", "scopeKind": ""}, {"name": "create_note(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Creates a new note for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "list_notes(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Lists all notes for the current user.", "scope": "", "scopeKind": ""}, {"name": "get_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Retrieves a specific note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note(note_id: int, note_in: NoteEdit, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Updates an existing note by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}, {"name": "catch_all_handler(request: Request, exc: Exception)", "description": "Global exception handler returning JSON error for unhandled exceptions.", "scope": "", "scopeKind": ""}, {"name": "custom_openapi()", "description": "Generates custom OpenAPI schema with potential modifications.", "scope": "", "scopeKind": ""}], "calls": ["get_env", "os.environ.get", "load_dotenv", "create_engine", "sessionmaker", "Base.metadata.create_all", "jwt.encode", "jwt.decode", "verify_password", "get_password_hash", "get_user", "authenticate_user", "get_current_user", "jsonify"], "search-terms": ["FastAPI", "JWT", "Notes API", "User Authentication", "CRUD notes", "Security", "SQLAlchemy models"], "state": 2, "file_id": 4, "knowledge_revision": 10, "git_revision": "ee1ac78a8ac4342ee20fdc8d560c3d519792effd", "revision_history": [{"9": "5b83e18a27f85aefb501aa429bf3fa616f205929"}, {"10": "ee1ac78a8ac4342ee20fdc8d560c3d519792effd"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^ALGORITHM = os.environ.get(\"ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^DATABASE_URL = os.environ.get(\"DB_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")  # Default to local SQLite i/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class Note(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteEdit", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class NoteEdit(NoteCreate):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteOut", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class NoteOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"insecure-default-key\")  # Set this in production!$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserOut", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^class UserOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "catch_all_handler", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def catch_all_handler(request: Request, exc: Exception):$/", "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    content = Column(Text, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"Body of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[timedelta] = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: Optional[timedelta] = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def create_note(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(ge/", "language": "Python", "kind": "function", "signature": "(note: NoteCreate, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    created_at = Column(DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "custom_openapi", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def custom_openapi():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def delete_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_cu/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False} if DATABASE_URL.s/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def get_note(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_curre/", "language": "Python", "kind": "function", "signature": "(note_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password):$/", "language": "Python", "kind": "function", "signature": "(password)"}, {"_type": "tag", "name": "get_user", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def get_user(db: Session, username: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str)"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    hashed_password = Column(String(256), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def list_notes(db: Session = Depends(get_db), current_user: User = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "login_for_access_token", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depen/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    notes = relationship(\"Note\", back_populates=\"owner\")$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "NoteOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "UserOut.Config", "scopeKind": "class"}, {"_type": "tag", "name": "owner", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    owner = relationship(\"User\", back_populates=\"notes\")$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    owner_id = Column(Integer, ForeignKey(\"users.id\"))$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def register(user_in: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user_in: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    title = Column(String(128), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., max_length=128, description=\"Title of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteCreate", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def update_note(note_id: int, note_in: NoteEdit, db: Session = Depends(get_db), current_user: Us/", "language": "Python", "kind": "function", "signature": "(note_id: int, note_in: NoteEdit, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    username = Column(String(64), unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^    username: str = Field(..., min_length=3, max_length=64, description=\"Username for registrati/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/notes-management-system-c7ebc2eb/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain_password, hashed_password):$/", "language": "Python", "kind": "function", "signature": "(plain_password, hashed_password)"}], "hash": "56cf96047e08eeb8c28fae1233281ea4", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"ACCESS_TOKEN_EXPIRE_MINUTES\", \"60\"))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = os.environ.get(\"ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.environ.get(\"DB_URL\", \"sqlite:\\/\\/\\/.\\/notes.db\")  # Default to local SQLite i/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get(\"SECRET_KEY\", \"insecure-default-key\")  # Set this in production!", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "content = Column(Text, nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime, default=datetime.utcnow)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, connect_args={\"check_same_thread\": False} if DATABASE_URL.s/", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hashed_password = Column(String(256), nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "notes = relationship(\"Note\", back_populates=\"owner\")", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "orm_mode = True", "scope": "NoteOut.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "owner = relationship(\"User\", back_populates=\"notes\")", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "owner_id = Column(Integer, ForeignKey(\"users.id\"))", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "title = Column(String(128), nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = Column(DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "username = Column(String(64), unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "str username", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}]}